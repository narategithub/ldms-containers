on:
  workflow_dispatch:
    inputs:
      TAG:
        default: "unstable"
        description: "TAG of the containers"
        required: False
        type: string
      vars:
        default: ""
        required: False
        type: string

jobs:
  bake-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Set ENV
        run: |
          set -e
          ARR=( ${{inputs.vars}} )
          I=0
          echo "LEN:" ${#ARR[*]}
          while (( I < ${#ARR[*]} )); do
            A="${ARR[I]}"
            V="${ARR[I+1]}"
            L="$A=${V}"
            echo $L | tee -a ${GITHUB_ENV}
            I=$((I+2))
          done
          echo "----------"
      - name: Show ENV
        run: |
          ARR=( ${{inputs.vars}} )
          I=0
          while (( I < ${#ARR[*]} )); do
            A=${ARR[I]}
            echo "${A}: ${!A}"
            I=$((I+2))
          done
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: bake and push
        uses: docker/bake-action@v5
        env:
          TAG: "${{inputs.TAG}}"
          ARCH: amd64
        with:
          push: true
          pull: true
  bake-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Set ENV
        run: |
          set -e
          ARR=( ${{inputs.vars}} )
          I=0
          echo "LEN:" ${#ARR[*]}
          while (( I < ${#ARR[*]} )); do
            A="${ARR[I]}"
            V="${ARR[I+1]}"
            L="$A=${V}"
            echo $L | tee -a ${GITHUB_ENV}
            I=$((I+2))
          done
          echo "----------"
      - name: Show ENV
        run: |
          ARR=( ${{inputs.vars}} )
          I=0
          while (( I < ${#ARR[*]} )); do
            A=${ARR[I]}
            echo "${A}: ${!A}"
            I=$((I+2))
          done
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: bake and push
        uses: docker/bake-action@v5
        env:
          TAG: "${{inputs.TAG}}"
          ARCH: arm64
        with:
          push: true
          pull: true
  bake-manifest:
    runs-on: ubuntu-latest
    needs: [ bake-amd64, bake-arm64 ]
    steps:
      - name: Set ENV
        run: |
          set -e
          ARR=( ${{inputs.vars}} )
          I=0
          echo "LEN:" ${#ARR[*]}
          while (( I < ${#ARR[*]} )); do
            A="${ARR[I]}"
            V="${ARR[I+1]}"
            L="$A=${V}"
            echo $L | tee -a ${GITHUB_ENV}
            I=$((I+2))
          done
          echo "----------"
      - name: Show ENV
        run: |
          ARR=( ${{inputs.vars}} )
          I=0
          while (( I < ${#ARR[*]} )); do
            A=${ARR[I]}
            echo "${A}: ${!A}"
            I=$((I+2))
          done
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: bake and push
        uses: docker/bake-action@v5
        env:
          TAG: "${{inputs.TAG}}"
        with:
          push: true
          pull: true
          targets: manifest
